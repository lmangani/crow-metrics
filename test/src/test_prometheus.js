"use strict";

import { MetricsRegistry, PrometheusObserver } from "../../lib";

import "should";
import "source-map-support/register";


describe("PrometheusObserver", () => {
  it("makes empty file", () => {
    const p = new PrometheusObserver(new MetricsRegistry());
    p.generate().should.eql("");
  });

  it("reports counters & gauges", () => {
    const r = new MetricsRegistry();
    const p = new PrometheusObserver();
    r.addObserver(p.observer);
    r.counter("trucks").increment(10);
    r.setGauge("temperature", 21);
    r._publish();

    p.generate().should.match(/^# generated by crow(.*?)\n/);
    p.generate().split("\n").slice(1).should.eql([
      "# TYPE trucks counter",
      "# TYPE temperature gauge",
      `trucks 10 ${p.lastTimestamp}`,
      `temperature 21 ${p.lastTimestamp}`,
      ""
    ]);
  });

  it("reports distributions", () => {
    const r = new MetricsRegistry();
    const p = new PrometheusObserver();
    r.addObserver(p.observer);
    r.distribution("coins_building_4").add([ 10, 11, 12 ]);
    r._publish();

    p.generate().should.match(/^# generated by crow(.*?)\n/);
    p.generate().split("\n").slice(1).should.eql([
      "# TYPE coins_building_4 summary",
      `coins_building_4{quantile="0.5"} 11 ${p.lastTimestamp}`,
      `coins_building_4{quantile="0.9"} 12 ${p.lastTimestamp}`,
      `coins_building_4{quantile="0.99"} 12 ${p.lastTimestamp}`,
      `coins_building_4_count 3 ${p.lastTimestamp}`,
      `coins_building_4_sum 33 ${p.lastTimestamp}`,
      ""
    ]);
  });

  it("reports with tags", () => {
    const r = new MetricsRegistry();
    const p = new PrometheusObserver();
    r.addObserver(p.observer);
    r.counter("trucks", { state: "TN" }).increment(10);
    r.counter("trucks", { state: "SC" }).increment(4);
    r._publish();

    p.generate().should.match(/^# generated by crow(.*?)\n/);
    p.generate().split("\n").slice(1).should.eql([
      "# TYPE trucks counter",
      `trucks{state="TN"} 10 ${p.lastTimestamp}`,
      `trucks{state="SC"} 4 ${p.lastTimestamp}`,
      ""
    ]);
  });
});
