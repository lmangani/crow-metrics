"use strict";

let registry = require("./registry");
let util = require("util");

let HEADER = `# generated by crow`;

/*
 * observer that latches results into a text buffer suitable for sending
 * to prometheus (in a web server you host).
 */
class PrometheusObserver {
  constructor(registry) {
    this.lastTimestamp = 0;
    this.lastSnapshot = {};
    if (registry != null) this.register(registry);
  }

  register(registry) {
    registry.addObserver((timestamp, snapshot) => {
      this.lastTimestamp = timestamp;
      this.lastSnapshot = snapshot;
    });
  }

  /*
   * generate the text body of a response to a prometheus query.
   * this is used by 'startServer', or you can use it directly to attach the
   * prometheus endpoint to an existing web service.
   */
  generate() {
    let lines = [ HEADER ];
    let types = this.lastSnapshot._types || {};

    for (let name in types) {
      let typename = "unknown";
      switch (types[name]) {
        case registry.MetricType.GAUGE:
          typename = "gauge";
          break;
        case registry.MetricType.COUNTER:
          typename = "counter";
          break;
        case registry.MetricType.DISTRIBUTION:
          typename = "summary";
          break;
      }
      lines.push(`# TYPE ${name} ${typename}`);
    }

    for (let name in this.lastSnapshot) {
      if (name[0] == "_") continue;
      lines.push(`${name} ${this.lastSnapshot[name]} ${this.lastTimestamp}`);
    }

    return lines.join("\n") + "\n";
  }

  /*
   * given an 'express' (or express-like) server object, attach the
   * prometheus handler to a path and listen on the given port (default 9090).
   * if you don't care about logging or using the express server for anything
   * else, you can just pass in the express module itself:
   *
   *     var express = require("express");
   *     var registry = new crow.Registry();
   *     var observer = new crow.PrometheusObserver(registry);
   *     observer.startServer(express);
   */
  startServer(express, path = "/", port = 9090) {
    if (express.get == null) {
      // probably got the express module itself. setup.
      express = express()
    }

    express.get(path, (request, response) => {
      response.set("Content-Type", "text/plain; version=0.0.4");
      response.send(this.generate());
    });
    if (port) express.listen(port);
  }
}


exports.PrometheusObserver = PrometheusObserver;
